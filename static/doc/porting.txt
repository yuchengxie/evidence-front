
# 新生存证开发手册

&nbsp;

## 目录

  - [1. 架构与组网](show_md.html#overview)
  - [2. 安装与部署](show_md.html#deploy)
  - [3. 源码走读](show_md.html#go_through)
  - [4. 存证 API](show_md.html#api)
  - [5. 定制扩展](show_md.html#porting)

&nbsp;

## 5. 定制扩展

### 5.1 用户侧代码

用户侧代码在网页中编程，样例工程已提供 NBC 钱包 API，序列化 `serial_msg` 与反序列化 `unserial_msg` 函数，依据 [源码走读](show_md.html#go_through) 所示的 RESTful 接口规格，发起存证请求即可，发动查询也类似。

因为源码比较简单，容易读懂，这里我们不展开介绍。

&nbsp;

### 5.2 多方见证

本样例未给出多方见证的细节实现，主要因为它涉及到多个服务节点，各方在不同节点提供见证及签名服务调用，容易导致样例工程的组网环境变复杂，不方便在线运行。

多方见证可建立层级结构，也可采用平级结构。前者先指定由某一方或多方见证签名后，再由另一方或多方进行签名，这种情形类似于不同层级的部门管理关系，一级部门管二级部门，二级部门管三级部门。后者则反映对等平级的情形，各方独立，互为监督，签名顺序没有要求，谁先签都关系。

被签名的内容可以是 `位置ID : 被存证项hash值 : 见证者公钥`。

如果见证者长期固定不定，被签内容中的 “见证者公钥” 还可以用 `0, 1, 2` 等 ID 号代替，从而节约存储空间。见证者须接收请求存证的内容，核对无误后才给出签名，其中，“被存证项hash值” 从请求存证的内容计算哈希值而得。

“位置ID” 则由收到存证请求的前置机分配，前置机接收存证请求，并负责将请求分发给见证者的服务节点，然后汇总见证结果（即，上述被签内容，外加见证者给出的签名），最后将签名结果返馈给终端用户。

&nbsp;

### 5.3 前置机宜用分布式数据库支持查询

样例工程以 csv 格式文件保存各项存证请求，采用 csv 有两个好处。一方面它很简单，用 Excel 等表格工具能直接打开浏览。另一方面，它可以与 AWS 的 S3 Select 结合起来使用，比方，在服务侧程序中我们可设计定义上传机制，让 csv 文件定时上传 AWS 的 S3 网盘上。csv 文件内容可用 S3 Select 支持查询语句，可以视需要一次只读一条存证记录，而非每次读取都传递整个文件。

样例工程为了让大家更快上手编程，源码尽可能精简，未采用数据库。如果在生产环境使用本存证系统，改用分布式数据库来保存 `EvStorage._cache` 用于查询的表项非常必要。`OwnerId-BlockId` 唯一定位一个 “待存证内容集合”，对应于一个 csv 文件，而 `OwnerId-BlockId-index` 对应于一条存证项，另外，被存证内容还可用它的 hash 值做索引，设计查询机制。

&nbsp;
